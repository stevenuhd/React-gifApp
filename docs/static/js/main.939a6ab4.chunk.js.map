{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","propTyoes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kOAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmB5C,OACE,sBAAMC,SAZS,SAACC,GACtBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAOZ,SACE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA0B3BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCClCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCYNO,MAZf,YAAsC,EAAfJ,GAAgB,IAAbC,EAAY,EAAZA,MAAMV,EAAM,EAANA,IAI5B,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAc,IAAD,EAEjBlB,mBAAS,CAEnCyB,KAAM,GACNa,SAAS,IALkC,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAmC3C,OA1BAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAGJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAQf,CAACpB,IAUIqB,ED9B2BK,CAAc1B,GAAhCa,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAGnB,OACE,qCACE,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,uBACZ,qBAAKA,UAAU,kDAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZrBgB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,WAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAI9B,OACE,qCACE,gDACA,2DACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACG+C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCX1B6B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.939a6ab4.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [inputValue, setinputValue] = useState('')\r\n\r\nconst handleInputChange = (e) =>{\r\n    setinputValue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\ne.preventDefault();\r\n\r\nif (inputValue.trim().length > 2){\r\n    setCategories((cats) => [inputValue,...cats]);\r\n    setinputValue('');\r\n}\r\n\r\n\r\n}\r\n\r\n    return (\r\n      <form onSubmit = {handleSubmit}>\r\n        <input  \r\n        type=\"text\" \r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n        />\r\n</form>\r\n    );\r\n}\r\n\r\n\r\nAddCategory.propTyoes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n export const getGifs = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wzUxAcyq2e0lVemGcqu3EBkk8WZrDQhF`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map((img) => {\r\n     return {\r\n       id: img.id,\r\n       title: img.title,\r\n       url: img.images?.downsized_medium.url,\r\n     };\r\n   });\r\n  \r\n   return gifs;\r\n };","import React from 'react'\r\n\r\nfunction GifGridItem( {id,title,url}) {\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"card animate__animated animate__backInLeft\">\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs( category );\r\n\r\n  \r\n    return (\r\n      <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'> Loading </p>}\r\n        <div className=\"card-grid animate__animated animate__backInLeft\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\nconst [state, setState] = useState({\r\n\r\ndata: [],\r\nloading: true\r\n\r\n});\r\n\r\nuseEffect(() => {\r\n\r\n    getGifs(category)\r\n    .then(imgs =>{\r\n\r\n        \r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n        });\r\n\r\n       \r\n\r\n        \r\n    })\r\n    \r\n},[category])\r\n\r\n\r\n\r\n// setTimeout(()=>{\r\n//     setstate({ \r\n//     data: [1,2,3,4,5,6,7],\r\n//     loading: false });\r\n// },3000);\r\n\r\nreturn state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Naruto\"]);\r\n      \r\n    return (\r\n      <>\r\n        <h2>Gif Expert App</h2>\r\n        <h3>Search your 10 gifs below</h3>\r\n        <AddCategory setCategories={setCategories} />\r\n        \r\n        <ol>\r\n          {categories.map((category) => (\r\n            <GifGrid key={category} category={category} />\r\n          ))}\r\n        </ol>\r\n      </>\r\n    );\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}